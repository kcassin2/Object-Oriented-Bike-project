import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class WareHouseManager extends Account{

	private String partName;
	private int partNumber;
	private String whFileName;
	private List<Inventory> whDB;
	
	WareHouseManager(String partName, int partNumber, String whFileName){
		super(firstName, lastName, userName, password, whFileName);
	}
	
	
	public Inventory examinePartbyName(String partName) {
		Inventory i = MainWareHouse.findPartByName(partName);
		return i;
	}
	
	public Inventory examinePartbyNumber(int partNumber) {
		Inventory i = MainWareHouse.findPartByNumber(partNumber);
		return i;
	}
	
	public void updateWHDB(String fileName) throws FileNotFoundException{
		File file = new File(fileName);
		Scanner read = new Scanner(file);
		while (read.hasNextLine()) {
			String line = read.nextLine();
			String regExp = "\\s*(\\s|,)\\s*";
			String[] bpi = line.split(regExp);
			BikePart bp = new BikePart(bpi[0],
					Integer.parseInt(bpi[1]),
					Double.parseDouble(bpi[2]),
					Double.parseDouble(bpi[3]),
					bpi[4].equals("true") ? true : false);
			int qty = Integer.parseInt(bpi[5]);
			addInventory(bp, qty);
		}
	}


	private void addInventory(BikePart bp, int qty) {
		Inventory i = findInventory(bp);
		if (i != null)
			updateInventory(i, bp, qty);
		else
			whDB.add(new Inventory(bp,qty));
		
	}


	private void updateInventory(Inventory i, BikePart bp, int qty) {
		i.getBp().setPrice(bp.getPrice());
		i.getBp().setSalesPrice(bp.getSalesPrice());
		i.getBp().setOnSale(bp.isOnSale());
		i.setCount(i.getCount() + qty);
		
	}


	private Inventory findInventory(BikePart bp) {
		for (Inventory i : whDB) {
			if (i.getBp().equals(bp))
				return i;
		}
		return null;
	}
	
}
